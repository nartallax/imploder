[["/generated",["/impl_a","/impl_b","/impl_c","/impl_d"],"(m,l,p,I,n,r)=>{m.myClassEnumeration=[p.ImplA,I.ImplB,n.ImplC,r.ImplD]}"],["/impl_a",["/utils"],"(t,r,e)=>{t.ImplA=class ImplA{getString(){return'hello from implA'}};class ImplButNotExported{getString(){return'this should NOT appear as well'}}t.runNotExportedImpl=function runNotExportedImpl(){e.logText((new ImplButNotExported).getString())}}"],["/impl_b","t=>{t.ImplB=class ImplB{getString(){return'this is implB'}},t.NotImpl=class NotImpl{getString(){return'this should NOT appear'}},(t=>{t.ImplButInNamespace=class ImplButInNamespace{getString(){return'also should not appear'}}})(t.MyNS||(t.MyNS={}))}"],["/impl_c","r=>{r.ImplC=class ImplC{getString(){return'implc'}}}"],["/impl_d","s=>{s.ImplD=class ImplD extends class MySuperClass{}{getString(){return'impl d'}}}"],["/main",["/utils","/generated","/impl_a"],"(n,t,e,i)=>{n.main=function main(){let n=i.myClassEnumeration.map(n=>(new n).getString()).join('; ');e.logText(n)}}"],["/utils","o=>{o.logText=function logText(o){console.log('LOGTEXT: '+o)}}"]]